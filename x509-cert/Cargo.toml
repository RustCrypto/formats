[package]
name = "x509-cert"
version = "0.3.0-pre"
description = """
Pure Rust implementation of the X.509 Public Key Infrastructure Certificate
format as described in RFC 5280
"""
authors = ["RustCrypto Developers"]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/RustCrypto/formats/tree/master/x509-cert"
categories = ["cryptography", "data-structures", "encoding", "no-std"]
keywords = ["crypto"]
readme = "README.md"
edition = "2021"
rust-version = "1.75"

[dependencies]
const-oid = { version = "=0.10.0-pre.2", features = ["db"] }
der = { version = "=0.8.0-pre.0", features = ["alloc", "derive", "flagset", "oid"] }
spki = { version = "=0.8.0-pre.0", features = ["alloc"] }

# optional dependencies
arbitrary = { version = "1.3", features = ["derive"], optional = true }
sha1 = { version = "0.11.0-pre.2", optional = true }
signature = { version = "=2.3.0-pre.2", features = ["rand_core"], optional = true }
tls_codec = { version = "0.4.0", default-features = false, features = ["derive"], optional = true }

[dev-dependencies]
hex-literal = "0.4"
rand = "0.8.5"
rsa = { version = "=0.10.0-pre.0", features = ["sha2"] }
ecdsa = { version = "=0.17.0-pre.4", features = ["digest", "pem"] }
p256 = "=0.14.0-pre.0"
rstest = "0.18"
sha2 = { version = "=0.11.0-pre.2", features = ["oid"] }
tempfile = "3.5.0"
x509-cert-test-support = { path = "./test-support" }

[features]
default = ["pem", "std"]
std = ["const-oid/std", "der/std", "spki/std", "tls_codec?/std"]

arbitrary = ["dep:arbitrary", "std", "der/arbitrary", "spki/arbitrary"]
builder = ["std", "sha1/default", "signature"]
hazmat = []
pem = ["der/pem", "spki/pem"]
sct = ["dep:tls_codec"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
