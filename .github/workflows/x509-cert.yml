name: x509-cert

on:
  pull_request:
    paths:
      - ".github/workflows/x509-cert.yml"
      - "const-oid/**"
      - "der/**"
      - "spki/**"
      - "x509-cert/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: x509-cert

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    if: false # disabled while we migrate to digest newtypes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.85.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - run: cargo hack build --target ${{ matrix.target }} --feature-powerset --exclude-features fingerprint,base64,default,arbitrary,builder,std
      - run: cargo hack check --target ${{ matrix.target }} --feature-powerset --include-features fingerprint,base64 --exclude-features default,std

  minimal-versions:
    if: false # TODO: temp disabled due to unpublished prerelease dependencies
    uses: RustCrypto/actions/.github/workflows/minimal-versions.yml@master
    with:
      working-directory: ${{ github.workflow }}
      install-zlint: true

  test:
    if: false # disabled while we migrate to digest newtypes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.85.0 # MSRV
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - uses: RustCrypto/actions/zlint-install@master
      - run: cargo test --no-default-features
      - run: cargo test
      - run: cargo test --features arbitrary
      - run: cargo test --features hazmat
      - run: cargo test --features sct
      - run: cargo hack test --feature-powerset --exclude-features arbitrary,base64,fingerprint,hazmat,sct
      - run: cargo test --all-features
      - run: cargo test --all-features --release

  fuzz:
    if: false # disabled while we migrate to digest newtypes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run certreq -- -max_total_time=30 -seed_inputs="fuzz/inputs/rsa2048-csr.der"
      - run: cargo fuzz run certreqinfo -- -max_total_time=30
